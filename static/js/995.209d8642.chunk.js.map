{"version":3,"file":"static/js/995.209d8642.chunk.js","mappings":"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","sources":["components/CalendarTools/CalendarTools.styled.jsx","components/CalendarTools/PeriodPaginator/PeriodPaginator.styled.jsx","components/CalendarTools/PeriodPaginator/PeriodPaginator.jsx","components/CalendarTools/PeriodTypeSelect/PeriodTypeSelect.styled.jsx","components/CalendarTools/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarTools/CalendarTools.jsx","components/CalendarTable/CalendarTable.styled.jsx","components/CalendarTable/CalendarTable.jsx","components/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/MonthCalendarHead/MonthCalendarHead.jsx","components/ChoosedMonth/ChoosedMonth.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ToolsWrapper = styled.div`\n@media(min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  };`\n\nexport const CurrentWrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 18px;`;\n\nexport const ChooseWrapper = styled.div`\nmargin-bottom: 24px;\ndisplay: flex`;\n\nexport const CurrentMonth = styled.span`\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\npadding: 6px 12px;\nbackground: ${props => props.theme.accentColor};\nborder-radius: 8px;\ncolor: ${props => props.theme.secondaryTextColor};\nfont-family: 'Inter';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.29;\ntext-align: center;\ntext-transform: uppercase;\n\n@media(min-width: 768px) {\n    padding: 8px 12px;\n    font-size: 16px;\n    line-height: 1.12;\n    margin-right: 8px;\n  };\n\n`;\n\n","import styled from \"styled-components\";\nimport { BiChevronRight, BiChevronLeft } from \"react-icons/bi\";\n\nexport const BiChevronLeftStyled = styled(BiChevronLeft)`\nheight: 30px;\nwidth: 36px;\nfill: #616161;\n`;\n\nexport const BiChevronRightStyled = styled(BiChevronRight)`\nfill: #616161;\n`;\n\nexport const CurrentDate = styled.span`\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\npadding: 6px 12px;\nbackground: ${props => props.theme.accentColor};\nborder-radius: 8px;\ncolor: ${props => props.theme.secondaryTextColor};\nfont-family: 'Inter';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.29;\ntext-align: center;\ntext-transform: uppercase;\nmin-width: 150px;\n\n@media(min-width: 768px) {\n    padding: 8px 12px;\n    font-size: 16px;\n    line-height: 1.12;\n    margin-right: 8px;\n  };\n\n`;\n\nexport const CurrentWrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 18px;`;\n\nexport const ButtonPeriodPaginator = styled.button`\nwidth: 36px;\nheight: 34px;\nbox-sizing: border-box;\nfont-size: 24px;\nfill: red;\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\n\nbackground: ${props => props.theme.mainBackgroundColor};\nborder: 1px solid rgba(220, 227, 229, 0.5);\n\n&:first-child {\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n};\n\n&:last-child {\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n};\n\n:hover {\n  cursor: pointer;\n} \n\n:hover svg {\n  cursor: pointer;\n  fill: ${props => props.theme.accentColor};\n};  \n  `\n\nexport const ConteinerForButtons = styled.div`\ndisplay: flex;`\n","import { format } from \"date-fns\";\nimport { CurrentDate, CurrentWrapper, BiChevronLeftStyled, BiChevronRightStyled, ButtonPeriodPaginator, ConteinerForButtons } from \"./PeriodPaginator.styled\";\n\n\nexport const PeriodPaginator = ({isChoosedMonth, changeAskDay, calendar, askDay}) => {\n    const date = isChoosedMonth ? format(askDay, 'MMMM yyyy') : format(askDay, 'dd MMMM yyyy');\n    \n    \n    \n  \n    return (\n        <CurrentWrapper>\n            <CurrentDate>{date}</CurrentDate>\n            <ConteinerForButtons>\n                <ButtonPeriodPaginator onClick={() => changeAskDay(-1)}><BiChevronLeftStyled/></ButtonPeriodPaginator>\n                <ButtonPeriodPaginator onClick={() => changeAskDay(1)}><BiChevronRightStyled/></ButtonPeriodPaginator>\n            </ConteinerForButtons>\n        </CurrentWrapper>\n    )\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ChooseWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n`;\n\nexport const ChangePeriod = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 25px;\n  gap: 149px;\n  width: 76px;\n  height: 34px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.29;\n  text-align: center;\n  color: #3e85f3;\n  border: none;\n\n  :first-child {\n    border-radius: 8px 0px 0px 8px;\n    padding: 8px 16px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n    background: ${props => props.ischoosedmonth ==='false' ? '#e3f3ff' : \"#CAE8FF\"};\n  }\n\n  :last-child {\n    border-radius: 0px 8px 8px 0px;\n    background: ${props => props.ischoosedmonth ==='true' ? '#e3f3ff' : \"#CAE8FF\"};\n  }\n\n`;\n","import {\n  ChooseWrapper,\n  ChangePeriod\n} from './PeriodTypeSelect.styled';\n\nexport const PeriodTypeSelect = ({ toogleChooseMonth, ischoosedmonth }) => {\n  return (\n    <ChooseWrapper>\n      <ChangePeriod onClick={toogleChooseMonth} ischoosedmonth={ischoosedmonth.toString()} to=\"/calendar/month\">\n        Month\n      </ChangePeriod>\n      <ChangePeriod onClick={toogleChooseMonth} ischoosedmonth={ischoosedmonth.toString()} to=\"/calendar/day\">\n        Day\n      </ChangePeriod>\n    </ChooseWrapper>\n  );\n};\n","import { ToolsWrapper } from \"./CalendarTools.styled\"\nimport { PeriodPaginator } from \"./PeriodPaginator/PeriodPaginator\"\nimport { PeriodTypeSelect } from \"./PeriodTypeSelect/PeriodTypeSelect\"\n\nexport const CalendarTools = ({isChoosedMonth, changeAskDay, askDay, calendar, toogleChooseMonth}) => {\n    // console.log(isChoosedMonth, 'isChoosedMonth')\n    // console.log(changeAskDay, 'changeAskDay')\n    // console.log(askDay, 'askDay')\n    // console.log(calendar, 'calendar')\n    // console.log(toogleChooseMonth, 'toogleChooseMonth')\n    \n    return (\n        <ToolsWrapper>\n        <PeriodPaginator isChoosedMonth={isChoosedMonth} askDay={askDay} changeAskDay={changeAskDay} calendar={calendar}/>\n        <PeriodTypeSelect ischoosedmonth={isChoosedMonth} toogleChooseMonth={toogleChooseMonth}/>\n        </ToolsWrapper>\n    )\n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst getPriorityColor = (props) => {\n  switch (props.priority) {\n    case 'low' :\n      return 'color: #3E85F3; background-color: #CEEEFD;';\n    case 'medium' :\n        return 'color: #F3B249; background-color: #FCF0D4;';\n    case 'high' :\n      return 'color: #EA3D65; background-color: #FFD2DD;';\n    default :\n    return 'color: #3E85F3; background-color: #FFFFFF';\n  };\n};\n\nexport const GridWrapper = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(7, 1fr);\nborder-radius: 8px;`;\n\nexport const CellWrapper = styled(NavLink)`\nmin-width: 28px;\nbackground: ${props => props.theme.mainBackgroundColor};\nborder: 1px solid rgba(220, 227, 229, 0.5);\nmin-height: 94px;\nfont-family: 'InterBolt';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 12px;\nline-height: 1.17;\ncolor: ${props => props.iscurrentmonth === 'true' ? props.theme.mainTextColor : props.theme.mainBackgroundColor};\n\n&:first-child {\n  border-top-left-radius: 8px;\n};\n\n&:last-child {\n  border-bottom-right-radius: 8px;\n};\n\n&:nth-child(7) {\n  border-top-right-radius: 8px;\n};\n\n&:nth-last-child(7) {\n  border-bottom-left-radius: 8px;\n};\n\n@media(min-width: 376px) {\n  min-width: 48px;\n  \n};\n\n@media(min-width: 768px) {\n    min-width: 100px;\n    height: 144px;\n    font-size: 16px;\n    line-height: 1.12;\n  };\n\n  @media(min-width: 1280px) {\n    height: 135px;\n  }\n`;\n\nexport const RowInCell = styled.div`\ndisplay: flex;\njustify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\nflex-direction: column;`;\n\nexport const DayWrapper = styled.div`\npadding: 10px 12px;\nfont-weight: 700;\nfont-family: 'InterBolt';\n\n@media(min-width: 768px) {\n    padding: 18px 22px;\n  }`;\n\nexport const CurrentDay = styled.div`\nbackground: ${props => props.theme.accentColor};\ncolor: #fff;\npadding: 4px 6px;\nborder-radius: 6px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmargin: -4px -6px;\n\n@media(min-width: 768px) {\n    padding: 4px 8px;\n    margin: -4px -8px;\n    border-radius: 8px;\n  }`;\n\nexport const ShowDayWrapper = styled.div`\ndisplay: flex;\njustify-content: flex-end;\n`;\n\nexport const TaskListWrapper = styled.ul`\nlist-style-type: none;\npadding: 0 8px 0px 8px;`;\n\nexport const TaskItem = styled.li`\nheight: 22px;\npadding: 4px 4px 4px 8px;\nfont-family: 'InterBolt';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 10px;\nline-height: 1.4;\nborder-radius: 8px;\noverflow: hidden;\ntext-overflow: ellipsis;\nmargin-bottom: 4px;\n${props => getPriorityColor(props)};\n\n\n@media(min-width: 768px) {\n  min-width: 92px;\n  height: 26px;\n  padding: 4px 8px 4px 12px;\n  font-size: 10px;\n  line-height: 1.29;\n};\n\n@media(min-width: 1280px) {\n  min-width: 139px;\n};`;\n\nexport const TasksMoreLabel = styled.div`\nmargin-top: auto;\nmargin: auto;\ncolor: #3E85F3;\ntext-align: center;\noverflow: hidden;\nfont-size: 14px;\n`;\n\n","import {\n  format,\n  isToday,\n  getUnixTime,\n  isSameMonth,\n  startOfDay,\n  endOfDay,\n} from 'date-fns';\nimport {\n  CellWrapper,\n  DayWrapper,\n  GridWrapper,\n  RowInCell,\n  CurrentDay,\n  ShowDayWrapper,\n  TaskListWrapper,\n  TaskItem,\n  TasksMoreLabel,\n} from './CalendarTable.styled';\nimport { nanoid } from 'nanoid';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/tasks/selectors';\n\nexport const CalendarTable = ({ calendar, askDay }) => {\n  // const allTasks = useSelector(selectIsitems);\n  const isTasksLoading = useSelector(selectIsLoading);\n  const tasks = useSelector(state => state.tasks.items)\n\n  // const tasks = [...allTasks.todo, ...allTasks.inProgress, ...allTasks.done];\n\n  const isCurrentMonth = day => isSameMonth(askDay, day);\n\n  let filteredTasks = [];\n\n  const getDayTasks = day => {\n    filteredTasks = tasks?.filter(\n      task =>\n        getUnixTime(new Date(task.date)) >= getUnixTime(startOfDay(day)) &&\n        getUnixTime(new Date(task.date)) < getUnixTime(endOfDay(day))\n    );\n  };\n\n  console.log(filteredTasks);\n\n\n  return (\n    <GridWrapper>\n      {calendar.map(dayItem => (\n        <CellWrapper\n          to={`/calendar/day/${format(dayItem, 'ddMMMMyyyy')}`}\n          key={nanoid()}\n          iscurrentmonth={isCurrentMonth(dayItem).toString()}\n        >\n          <RowInCell justifyContent={'flex-end'}>\n            <ShowDayWrapper>\n              <DayWrapper>\n                {isToday(dayItem) ? (\n                  <CurrentDay>{format(dayItem, 'd')}</CurrentDay>\n                ) : (\n                  format(dayItem, 'd')\n                )}\n              </DayWrapper>\n            </ShowDayWrapper>\n            {!isTasksLoading && (\n              <TaskListWrapper>\n                {getDayTasks(dayItem)}\n                {filteredTasks?.slice(0, 2).map(task => (\n                  <TaskItem key={nanoid()} priority={task.priority}>{task.title}</TaskItem>\n                ))}\n              </TaskListWrapper>\n            )}\n            {filteredTasks?.length > 2 && (\n              <TasksMoreLabel>...</TasksMoreLabel>\n            )}\n          </RowInCell>\n        </CellWrapper>\n      ))}\n    </GridWrapper>\n  );\n};\n\n","import styled from \"styled-components\";\n\nexport const GridWrapper = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(7, 1fr);\nborder-radius: 8px;\nborder: 1px solid rgba(220, 227, 229, 0.5);\npadding-left: 0;\nmargin-bottom: 14px;`;\n\nexport const CellWrapper = styled.li`\nheight: 50px;\nbackground: ${props => props.theme.mainBackgroundColor};\nfont-family: 'InterSemiBolt';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 16px;\nline-height: 1.12;\ntext-align: center;\ntext-transform: uppercase;\ncolor: ${props => props.weekend ? props.theme.accentColor : props.theme.CalendarHead};\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n&:first-child {\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n};\n\n&:last-child {\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n};\n\n@media(min-width: 376px) {\n    min-width: 40px;\n  };\n\n@media(min-width: 768px) {\n  height: 46px;\n};\n`;","import { CellWrapper, GridWrapper} from \"./MonthCalendarHead.styled\";\nimport { useResponce } from \"hooks/responce\";\n\nexport const MonthCalendarHead = () => {\n    const {isMobile} = useResponce();\n    return (    \n        <GridWrapper>\n            {isMobile ? (<><CellWrapper>M</CellWrapper>\n            <CellWrapper>T</CellWrapper>\n            <CellWrapper>W</CellWrapper>\n            <CellWrapper>T</CellWrapper>\n            <CellWrapper>F</CellWrapper>\n            <CellWrapper weekend={true}>S</CellWrapper>\n            <CellWrapper weekend={true}>S</CellWrapper></>) : (<><CellWrapper>MON</CellWrapper>\n            <CellWrapper>TUE</CellWrapper>\n            <CellWrapper>WED</CellWrapper>\n            <CellWrapper>THU</CellWrapper>\n            <CellWrapper>FRI</CellWrapper>\n            <CellWrapper weekend={true}>SAT</CellWrapper>\n            <CellWrapper weekend={true}>SUN</CellWrapper></>)}\n        </GridWrapper>      \n    )\n}","import { CalendarTable } from \"../CalendarTable/CalendarTable\"\nimport { MonthCalendarHead } from \"../MonthCalendarHead/MonthCalendarHead\"\n\nexport const ChoosedMonth = ({calendar, askDay}) => {\n    return (\n        <>\n        <MonthCalendarHead/>\n        <CalendarTable calendar={calendar} askDay={askDay}/>\n        </>\n    )\n}","import {\n  endOfMonth,\n  endOfWeek,\n  startOfMonth,\n  startOfToday,\n  isSameDay,\n  addDays,\n  addMonths,\n  startOfDay,\n} from 'date-fns';\n\nimport { startOfWeek } from 'date-fns';\nimport { CalendarTools } from '../../components/CalendarTools/CalendarTools';\nimport { useEffect, useState } from 'react';\nimport { ChoosedMonth } from '../../components/ChoosedMonth/ChoosedMonth';\nimport { ChoosedDay } from '../../components/ChoosedDay/ChoosedDay';\nimport { useDispatch } from 'react-redux';\nimport { fetchTasksAll } from 'redux/tasks/operations';\nimport { useParams } from 'react-router';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectIsitems } from 'redux/tasks/selectors';\n// import { fetchTasksAll } from 'redux/tasks/operations';\n\nexport default function CalendarPage() {\n  const [askDay, setAskDay] = useState(startOfToday());\n  const [isChoosedMonth, setIsChoosedMonth] = useState(true);\n\n  const startMonth = startOfMonth(askDay);\n  const startDay = startOfWeek(startMonth, { weekStartsOn: 1 });\n  const endMonth = endOfMonth(askDay);\n  const endDay = endOfWeek(endMonth, { weekStartsOn: 1 });\n  const firstDayOfNextMonth = addDays(endDay, 1);\n  const firstDayOFWeek = startOfWeek(askDay, { weekStartsOn: 1 });\n  const lastDayOfWeek = endOfWeek(askDay, { weekStartsOn: 1 });\n  const startNextWeek = addDays(lastDayOfWeek, 1);\n\n\n \n  let newAskDate = useParams();\n\n  \n  useEffect(() => {\n\n  if (newAskDate.date) {\n    const formatedNewAskDate = new Date(newAskDate.date);\n    setAskDay(startOfDay(formatedNewAskDate));\n    setIsChoosedMonth(false);\n    // setIsChoosedMonth(false);\n  }}, [newAskDate])\n\n  // const items = useSelector(selectIsitems);\n  // const dispatch = useDispatch();\n  // useEffect(() => {\n  //   dispatch(fetchTasksAll());\n  // }, [dispatch]);\n  // console.log(items);\n\n  let calendar = [];\n  let weekCalendar = [];\n  let day = startDay;\n  let weekDay = firstDayOFWeek;\n  while (!isSameDay(day, firstDayOfNextMonth)) {\n    calendar.push(day);\n    day = addDays(day, 1);\n  }\n\n  while (!isSameDay(weekDay, startNextWeek)) {\n    weekCalendar.push(weekDay);\n    weekDay = addDays(weekDay, 1);\n  }\n\n  const changeAskDay = value => {\n    if (!isChoosedMonth) {\n      weekCalendar = [];\n      return setAskDay(addDays(askDay, value));\n    }\n\n    if (isChoosedMonth) {\n      return setAskDay(addMonths(askDay, value));\n    }\n  };\n\n  const toogleChooseMonth = () => {\n    setIsChoosedMonth(prev => !prev);\n  };\n\n  const newFormat = new Date(askDay);\n\n  const isoString = newFormat.toISOString().substr(0, 7);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTasksAll(isoString));\n  }, [dispatch, isoString]);\n  return (\n    <>\n      <CalendarTools\n        calendar={calendar}\n        changeAskDay={changeAskDay}\n        isChoosedMonth={isChoosedMonth}\n        askDay={askDay}\n        toogleChooseMonth={toogleChooseMonth}\n      />\n      {isChoosedMonth ? (\n        <ChoosedMonth calendar={calendar} askDay={askDay} />\n      ) : (\n        <ChoosedDay weekCalendar={weekCalendar} askDay={askDay}/>\n      )}\n    </>\n  );\n}\n"],"names":["ToolsWrapper","styled","props","theme","accentColor","secondaryTextColor","BiChevronLeftStyled","BiChevronLeft","BiChevronRightStyled","BiChevronRight","CurrentDate","CurrentWrapper","ButtonPeriodPaginator","mainBackgroundColor","ConteinerForButtons","PeriodPaginator","isChoosedMonth","changeAskDay","askDay","calendar","date","format","onClick","ChooseWrapper","ChangePeriod","NavLink","ischoosedmonth","PeriodTypeSelect","toogleChooseMonth","toString","to","CalendarTools","GridWrapper","CellWrapper","iscurrentmonth","mainTextColor","RowInCell","justifyContent","DayWrapper","CurrentDay","ShowDayWrapper","TaskListWrapper","TaskItem","priority","getPriorityColor","TasksMoreLabel","CalendarTable","isTasksLoading","useSelector","selectIsLoading","tasks","state","items","filteredTasks","getDayTasks","day","filter","task","getUnixTime","Date","startOfDay","endOfDay","console","log","map","dayItem","isSameMonth","isToday","slice","title","nanoid","length","weekend","CalendarHead","MonthCalendarHead","isMobile","useResponce","ChoosedMonth","CalendarPage","useState","startOfToday","setAskDay","setIsChoosedMonth","startMonth","startOfMonth","startDay","startOfWeek","weekStartsOn","endMonth","endOfMonth","endDay","endOfWeek","firstDayOfNextMonth","addDays","firstDayOFWeek","lastDayOfWeek","startNextWeek","newAskDate","useParams","useEffect","formatedNewAskDate","weekCalendar","weekDay","isSameDay","push","isoString","toISOString","substr","dispatch","useDispatch","fetchTasksAll","value","addMonths","prev","ChoosedDay"],"sourceRoot":""}