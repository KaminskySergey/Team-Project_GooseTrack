{"version":3,"file":"static/js/607.efe2e9e8.chunk.js","mappings":"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","sources":["images/account/add.svg","components/Box/Box.jsx","components/AvatarUploader/AvatarUploader.jsx","components/AvatarUploader/AvatarUploader.styled.jsx","components/UserForm/UserForm.jsx","components/UserForm/UserForm.styled.jsx","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["var _circle, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 7,\n    cy: 7,\n    r: 7,\n    fill: \"#3E85F3\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4.66669V9.33336\",\n    stroke: \"white\",\n    strokeWidth: 0.8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66699 7H9.33366\",\n    stroke: \"white\",\n    strokeWidth: 0.8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.13f498cd8303f7e5c4171c2f7a7aafd8.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport {\n  space,\n  layout,\n  color,\n  flexbox,\n  position,\n  border,\n  shadow,\n  grid,\n} from 'styled-system';\n\nconst Box = styled.div(\n  space,\n  layout,\n  color,\n  flexbox,\n  position,\n  border,\n  shadow,\n  grid\n);\n\nexport default Box;\n","import React, { useState } from 'react';\nimport avatar from 'images/account/avatar.png';\nimport { ReactComponent as AddIcon } from 'images/account/add.svg';\nimport { Img, Input, Label, Wrap } from '.';\nimport Box from 'components/Box/Box';\n\nexport const AvatarUploader = () => {\n  const [imagePreview, setImagePreview] = useState(avatar);\n\n  const handleImageChange = e => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setImagePreview(fileReader.result);\n    };\n    fileReader.readAsDataURL(selectedFile);\n  };\n\n  return (\n    <Box position=\"relative\" display=\"block\" m=\"0 auto\" width=\"max-content\">\n      {imagePreview ? (\n        <Wrap>\n          <Img src={imagePreview} alt=\"Avatar Preview\" />\n        </Wrap>\n      ) : (\n        <div>Upload your avatar</div>\n      )}\n      <Input\n        type=\"file\"\n        onChange={handleImageChange}\n        accept=\"image/*\"\n        id=\"add-image\"\n      />\n      <Label htmlFor=\"add-image\">\n        <AddIcon width=\"100%\" height=\"100%\" display=\"block\" />\n      </Label>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  width: 72px;\n  height: 72px;\n  margin: 0 auto;\n  border: 1px solid #3e85f3;\n  border-radius: 50%;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const Input = styled.input`\n  display: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #e0e0e0;\n  cursor: pointer;\n  position: absolute;\n  top: 85%;\n  right: 20%;\n  /* right: 15px;\n  top: 62px; */\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Wrapper, Label, Input, Button, Title, AccountForm, Wrap } from '.';\nimport { AvatarUploader } from 'components/AvatarUploader';\nconst regex = {\n  name: /(^[A-Z]{1}[a-z]{1,14} [A-Z]{1}[a-z]{1,14}$)|(^[А-Я]{1}[а-я]{1,14} [А-Я]{1}[а-я]{1,14}$)/,\n  email:\n    /(^(?!.*@.*@.*$)(?!.*@.*--.*\\..*$)(?!.*@.*-\\..*$)(?!.*@.*-$)((.*)?@[a-z]{5}\\.[a-z]{2,}(\\.[a-z]{2,})?)$)/,\n  phone:\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n};\n\nconst userSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(regex.name)\n    .min(3, 'At least 3 digits is required')\n    .max(50, 'At most 50 digits is required')\n    .required('User name is required'),\n  birthday: Yup.string().required(),\n  email: Yup.string().email().matches(regex.email).required(),\n  phone: Yup.string()\n    .matches(regex.phone)\n    .min(7, 'At least 7 digits is required')\n    .max(20, 'At most 15 digits is required'),\n  skype: Yup.string()\n    .min(3, 'At least 3 digits is required')\n    .max(50, 'At most 50 digits is required'),\n});\n\nexport const UserForm = () => {\n  const [userName, setUserName] = useState('Freddie Mercury');\n  const [data, setData] = useState({\n    name: userName,\n    birthday: '',\n    email: '',\n    phone: '',\n    skype: '',\n  });\n  const { name, birthday, email, phone, skype } = data;\n\n  const initialValues = { name, birthday, email, phone, skype };\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log('form: ', values);\n    setData(values);\n  };\n\n  const handleChangeName = evt => {\n    if (evt.target.name !== 'name') {\n      return;\n    }\n    console.log('name :>> ', evt.target.value);\n    setUserName(evt.target.value);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <AccountForm onChange={handleChangeName}>\n        <AvatarUploader />\n        <Title>{userName}</Title>\n\n        <Wrap>\n          <Wrapper>\n            <Label>\n              User Name\n              <Input type=\"text\" name=\"name\" />\n            </Label>\n            <Label>\n              Birthday\n              <Input type=\"date\" name=\"birthday\" />\n            </Label>\n            <Label>\n              Email\n              <Input type=\"email\" name=\"email\" placeholder=\"freddie@mail.com\" />\n            </Label>\n          </Wrapper>\n          <Wrapper>\n            <Label>\n              Phone\n              <Input\n                type=\"phone\"\n                name=\"phone\"\n                placeholder=\"+38 (098) 666-55-44\"\n              />\n            </Label>\n            <Label>\n              Skype\n              <Input\n                type=\"text\"\n                name=\"skype\"\n                placeholder=\"Add a skype number\"\n              />\n            </Label>\n          </Wrapper>\n        </Wrap>\n        <Button type=\"submit\">Save changes</Button>\n      </AccountForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 18px;\n  column-gap: 50px;\n  align-items: center;\n  max-width: 100%;\n  margin-top: 40px;\n\n  @media (min-width: 960px) {\n    margin-bottom: 44px;\n  }\n\n  @media (min-width: 1150px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: baseline;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  max-width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  max-width: 354px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc((14 / 12) * 100%);\n  color: #111111;\n\n  @media (min-width: 768px) {\n    width: 354px;\n    font-size: 14px;\n    line-height: calc((18 / 14) * 100%);\n  }\n`;\n\nexport const UploadImage = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 124px;\n  height: 124px;\n  border-radius: 50%;\n  border: 1px solid red;\n`;\n\nexport const Input = styled(Field)`\n  height: 42px;\n  border-radius: 8px;\n  padding: 0 14px;\n  border-color: rgb(17 17 17 / 15%);\n  color: #111111;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc((18 / 16) * 100%);\n  }\n`;\n\nexport const FieldImg = styled(Field)`\n  width: 40px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 195px;\n  height: 46px;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  /* margin: 40px auto; */\n  border-radius: 16px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n  background-color: #3e85f3;\n  color: #ffffff;\n  border: none;\n  cursor: pointer;\n\n  @media (min-width: 960px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const Img = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  margin-top: 20px;\n  /* margin-bottom: 40px; */\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n  color: #343434;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: calc((18 / 18) * 100%);\n  }\n`;\n\nexport const AccountForm = styled(Form)`\n  padding: 40px 18px;\n  background-color: #ffffff;\n  border-radius: 16px;\n  height: 100%;\n\n  @media (min-width: 960px) {\n    padding: 60px 18px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const RedirectLink = styled(NavLink)`\n  border: 1px solid black;\n\n  :hover,\n  :focus {\n    background-color: #290b78;\n    color: white;\n  }\n`;\n\nexport const container = styled.div`\n  background-color: green;\n`;\n","import { UserForm } from 'components/UserForm';\nimport {} from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <UserForm />\n    // <div>\n    //   <h1>\n    //     Account Page\n    //     <span role=\"img\" aria-label=\"Greeting icon\">\n    //       💁‍♀️\n    //     </span>\n    //   </h1>\n    // </div>\n  );\n}\n"],"names":["_circle","_path","_path2","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAdd","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","cx","cy","r","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","styled","space","layout","color","flexbox","position","border","shadow","grid","AvatarUploader","useState","imagePreview","setImagePreview","display","m","Wrap","Img","src","alt","Input","type","onChange","e","selectedFile","files","fileReader","FileReader","onload","result","readAsDataURL","accept","Label","htmlFor","regex","userSchema","Yup","shape","name","matches","min","max","required","birthday","email","phone","skype","UserForm","userName","setUserName","data","setData","initialValues","validationSchema","onSubmit","values","resetForm","console","log","AccountForm","evt","value","Title","Wrapper","placeholder","Button","Field","Form","NavLink","AccountPage"],"sourceRoot":""}