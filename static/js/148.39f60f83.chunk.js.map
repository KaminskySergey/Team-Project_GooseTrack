{"version":3,"file":"static/js/148.39f60f83.chunk.js","mappings":"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","sources":["images/account/add.svg","schemas/userShema.js","redux/user/selectors.js","components/AvatarUploader/AvatarUploader.jsx","components/AvatarUploader/AvatarUploader.styled.jsx","components/UserFild/UserFild.styled.jsx","components/UserFild/UserFild.jsx","components/DatePicker/BirthdatePicker.jsx","components/UserForm/UserForm.jsx","components/UserForm/UserForm.styled.jsx","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["var _circle, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 7,\n    cy: 7,\n    r: 7,\n    fill: \"#3E85F3\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4.66669V9.33336\",\n    stroke: \"white\",\n    strokeWidth: 0.8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66699 7H9.33366\",\n    stroke: \"white\",\n    strokeWidth: 0.8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.13f498cd8303f7e5c4171c2f7a7aafd8.svg\";\nexport { ForwardRef as ReactComponent };","import * as Yup from 'yup';\n\nconst regex = {\n  name: /^[a-z]*$/,\n  email:\n    /^(?!.@.@.$)(?!.@.--...$)(?!.@.-..$)(?!.@.-$)((.*)?@[a-z0-9]{1,}.[a-z]{2,}(.[a-z]{2,})?)$/,\n  phone:\n    /^[+]?[(]?[0-9]{1,4}[)]?[-\\s.]?[0-9]{1,3}[-\\s.]?[0-9]{1,4}[-\\s.]?[0-9]{1,4}$/,\n  telegram: /^@[A-Za-z0-9_.-]{3,50}$/,\n};\n\nexport const userShema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[^0-9]+$/, 'Name should contain only letters')\n    .min(2, 'Must be at least 2 characters!')\n    .max(16, 'Must be up to 16 characters!')\n    .required('Name is required'),\n  birthday: Yup.string('Please enter your full date of birth').required(\n    'Birthday is required'\n  ),\n  email: Yup.string()\n    .email('Invalid email format')\n    .matches(regex.email, 'Invalid email format')\n    .required('Email is required'),\n  phone: Yup.string()\n    .matches(regex.phone, 'Invalid phone number format')\n    .min(6, 'At least 7 digits is required'),\n  telegram: Yup.string()\n    .matches(regex.telegram, 'Invalid telegram username format')\n    .max(50, 'At most 50 digits is required'),\n  avatarURL: Yup.string()\n  //   .min(3, 'At least 3 digits is required')\n  //   .max(50, 'At most 50 digits is required'),\n});","export const selectUserInfo = state => state.user.info;\nexport const selectLoading = state => state.user.loading;\n\n\n","import React, { useState } from 'react';\nimport avatar from 'images/account/avatar.png';\nimport { ReactComponent as AddIcon } from 'images/account/add.svg';\nimport { Img, Input, Label, Wrap } from '.';\nimport Box from 'components/Box/Box';\n\nexport const AvatarUploader = ({ avatarURL }) => {\n  const [imagePreview, setImagePreview] = useState(avatar);\n\n  const handleImageChange = e => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) {\n      return;\n    }\n\n    const imageUrl = URL.createObjectURL(selectedFile);\n    setImagePreview(imageUrl);\n\n    // const fileReader = new FileReader();\n    // fileReader.onload = () => {\n    //   setImagePreview(fileReader.result);\n    // };\n    // fileReader.readAsDataURL(selectedFile);\n  };\n\n  return (\n    <Box position=\"relative\" display=\"block\" m=\"0 auto\" width=\"max-content\">\n      <Wrap>\n        <Img src={imagePreview} alt=\"Avatar Preview\" />\n      </Wrap>\n\n      <Input\n        type=\"file\"\n        onChange={handleImageChange}\n        accept=\"image/*\"\n        id=\"add-image\"\n      />\n      <Label htmlFor=\"add-image\">\n        <AddIcon width=\"100%\" height=\"100%\" display=\"block\" />\n      </Label>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  width: 72px;\n  height: 72px;\n  margin: 0 auto;\n  border: 1px solid ${props => props.theme.accentColor};\n  border-radius: 50%;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const Input = styled.input`\n  display: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #e0e0e0;\n  cursor: pointer;\n  position: absolute;\n  top: 85%;\n  right: 20%;\n  /* right: 15px;\n  top: 62px; */\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const MessageError = styled(ErrorMessage)`\n  display: block;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  max-width: 354px;\n  font-family: 'InterNormal';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc((14 / 12) * 100%);\n  color: ${props => props.theme.mainTextColor};\n\n  @media (min-width: 768px) {\n    width: 354px;\n    font-size: 14px;\n    line-height: calc((18 / 14) * 100%);\n  }\n`;\n","import { Input } from 'components/UserForm';\nimport { MessageError, Label } from './UserFild.styled';\n\nexport const UserFild = ({ title, type, name, placeholder = null }) => {\n  return (\n    <Label>\n      {title} <Input type={type} name={name} placeholder={placeholder} />\n      <MessageError name={name} component=\"p\" />\n    </Label>\n  );\n};\n","import DatePicker from 'react-multi-date-picker';\nimport weekends from 'react-multi-date-picker/plugins/highlight_weekends';\n\nimport { Label, MessageError } from 'components/UserFild';\nimport './styles.css';\n\nconst weekDays = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nconst customStyle = {\n  width: '100%',\n  fontFamily: 'InterSemiBolt',\n  fontSize: '16px',\n  lineHeight: 'calc((18/16) * 100%)',\n  margin: 0,\n  padding: '0 14px',\n  color: `${props => props.theme.mainTextColor}`,\n  height: '42px',\n  borderRadius: '8px',\n  borderColor: 'rgb(17 17 17 / 15%)',\n\n  // height: '60px',\n  // backgroundColor: '#3E85F3',\n  // color: 'white',\n\n  //\n  // height: 42px;\n  // border-radius: 8px;\n  // padding: 0px 14px;\n  // border-color: rgba(17, 17, 17, 0.15);\n  // color: rgb(17, 17, 17);\n  // font-weight: 600;\n  //\n  // font-size: 14px;\n  // line-height: calc(128.571%);\n};\n\n// const customHoverStyle = {\n//   backgroundColor: 'white',\n//   color: '#3E85F3',\n// };\n\nexport function GooseDatePicker({ title, name, date, onChange }) {\n  return (\n    <Label>\n      {title}\n      <DatePicker\n        name={name}\n        value={date}\n        onChange={value => onChange(value)}\n        format=\"DD/MM/YYYY\"\n        editable={false}\n        weekDays={weekDays}\n        weekStartDayIndex={1}\n        highlightToday={false}\n        plugins={[weekends()]}\n        style={customStyle}\n        // monthYearSeparator={' '} //Викидає помилку, треба розібратися\n        // arrow={false}\n\n        // calendar={gregorian}\n        // locale={gregorian_en}\n        // weekPicker={false}\n        // showOtherDays={true}\n        // onlyShowInRangeDates={false}\n        // hoverStyle={customHoverStyle}\n        // disabledDates={[\n        //   { daysOfWeek: [6] }, // Субота\n        //   { daysOfWeek: [7] }, // Неділя\n        // ]}\n        // disabledDates={isDateDisabled}\n        // inputClass=\"datepicker-input\"\n        // className=\"rmdp-prime\"\n        // containerClassName=\"custom-container\"\n\n        // render={({ date }) => {\n        //   return (\n        //     <>\n        //       {/* <span>{date.getDate()}</span> */}\n        //       {/* <span>{date.getMonth() + 1}</span> */}\n        //       {/* <span>{date.getFullYear()}</span> */}\n        //     </>\n        //   );\n        // }}\n      />\n      <MessageError name={name} component=\"p\" />\n    </Label>\n  );\n}\n\n// <DatePicker\n//  mapDays={({ date }) => {\n//    let isWeekend = [0, 6].includes(date.weekDay.index);\n//\n//    if (isWeekend)\n//      return {\n//        disabled: true,\n//        style: { color: '#ccc' },\n//        onClick: () => alert('weekends are disabled'),\n//      };\n//  }}\n// />;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport { Wrapper, Button, Title, AccountForm, Wrap } from '.';\nimport { userShema } from 'schemas/userShema';\nimport { selectUserInfo } from 'redux/user/selectors';\nimport { fetchUser, updateUser } from 'redux/user/operations';\nimport { AvatarUploader } from 'components/AvatarUploader';\nimport { UserFild } from 'components/UserFild';\nimport { GooseDatePicker } from 'components/DatePicker/BirthdatePicker';\n\nexport const UserForm = () => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector(selectUserInfo);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getUserInfo = async () => {\n      await dispatch(fetchUser());\n      setIsLoading(false);\n    };\n\n    getUserInfo();\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  const { name, birthday, email, phone, telegram } = userInfo;\n\n  return (\n    <Formik\n      initialValues={{\n        name: name,\n        birthday: birthday,\n        email: email,\n        phone: phone,\n        telegram: telegram,\n      }}\n      validationSchema={userShema}\n      onSubmit={values => dispatch(updateUser(values))}\n    >\n      {({ values }) => (\n        <AccountForm>\n          <AvatarUploader />\n          <Title>{values.name}</Title>\n          <Wrap>\n            <Wrapper>\n              <UserFild title=\"User name\" type=\"text\" name=\"name\" />\n              {/* <UserFild\n                title=\"Birthday\"\n                type=\"date\"\n                name=\"birthday\"\n                value={values.birthday}\n              /> */}\n              <GooseDatePicker\n                title={'Birthday'}\n                name=\"birthday\"\n                date={values.birthday}\n                onChange={date => (values.birthday = date)}\n              />\n              <UserFild title=\"Email\" type=\"email\" name=\"email\" />\n            </Wrapper>\n\n            <Wrapper>\n              <UserFild\n                title=\"Phone\"\n                type=\"tel\"\n                name=\"phone\"\n                placeholder=\"Add phone number\"\n              />\n              <UserFild\n                title=\"Telegram\"\n                type=\"text\"\n                name=\"telegram\"\n                placeholder=\"Add a telegram nickname\"\n              />\n            </Wrapper>\n          </Wrap>\n          <Button type=\"submit\">Save changes</Button>\n        </AccountForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 18px;\n  column-gap: 50px;\n  align-items: center;\n  max-width: 100%;\n  margin-top: 40px;\n\n  @media (min-width: 960px) {\n    margin-bottom: 44px;\n  }\n\n  @media (min-width: 1150px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: baseline;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  max-width: 100%;\n`;\n\nexport const UploadImage = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 124px;\n  height: 124px;\n  border-radius: 50%;\n  border: 1px solid red;\n`;\n\nexport const Input = styled(Field)`\n  height: 42px;\n  border-radius: 8px;\n  padding: 0 14px;\n  border-color: rgb(17 17 17 / 15%);\n  color: ${props => props.theme.TextColorUserProfile};\n  font-family: 'InterSemiBolt';\n  font-weight: 600;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc((18 / 16) * 100%);\n  }\n`;\n\nexport const FieldImg = styled(Field)`\n  width: 40px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 195px;\n  height: 46px;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  /* margin: 40px auto; */\n  border-radius: 16px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n  background-color: ${props => props.theme.accentColor};\n  color: ${props => props.theme.secondaryTextColor};\n  border: none;\n  cursor: pointer;\n\n  @media (min-width: 960px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const Img = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  margin-top: 20px;\n  /* margin-bottom: 40px; */\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n  color: ${props => props.theme.mainTextColor};\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: calc((18 / 18) * 100%);\n  }\n`;\n\nexport const AccountForm = styled(Form)`\n  padding: 40px 18px;\n  background-color: ${props => props.theme.mainBackgroundColor};\n  border-radius: 16px;\n  height: 100%;\n\n  @media (min-width: 960px) {\n    padding: 60px 18px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const RedirectLink = styled(NavLink)`\n  border: 1px solid black;\n\n  :hover,\n  :focus {\n    background-color: #290b78;\n    color: white;\n  }\n`;\n\nexport const container = styled.div`\n  background-color: green;\n`;\n","import { UserForm } from 'components/UserForm';\n\nimport {} from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    \n    <UserForm />\n    \n  );\n  }\n"],"names":["_circle","_path","_path2","regex","userShema","Yup","shape","name","matches","min","max","required","birthday","email","phone","telegram","avatarURL","selectUserInfo","state","user","info","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAdd","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","cx","cy","r","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","AvatarUploader","useState","imagePreview","setImagePreview","Box","position","display","m","Wrap","Img","src","alt","Input","type","onChange","e","selectedFile","files","imageUrl","URL","createObjectURL","accept","Label","htmlFor","styled","theme","accentColor","MessageError","ErrorMessage","mainTextColor","UserFild","placeholder","component","weekDays","customStyle","fontFamily","fontSize","lineHeight","margin","padding","color","borderRadius","borderColor","GooseDatePicker","date","value","format","editable","weekStartDayIndex","highlightToday","plugins","weekends","style","UserForm","dispatch","useDispatch","userInfo","useSelector","isLoading","setIsLoading","useEffect","getUserInfo","fetchUser","initialValues","validationSchema","onSubmit","values","updateUser","AccountForm","Title","Wrapper","Button","Field","TextColorUserProfile","secondaryTextColor","Form","mainBackgroundColor","NavLink","AccountPage"],"sourceRoot":""}